// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.

#pragma once

// oZKS
#include "oZKS/defines.h"

namespace ozks {
    /**
    Represents the result of an insertion into an oZKS instance
    */
    class InsertResult {
    public:
        /**
        Construct an instance of InsertResult
        */
        InsertResult() = default;

        /**
        Construct an instance of InsertResult
        */
        InsertResult(const commitment_type &commitment, const append_proof_type &append_proof)
            : commitment_(commitment), append_proof_(append_proof)
        {}

        /**
        Commitment generated by the insertion
        */
        const commitment_type &commitment() const
        {
            return commitment_;
        }

        /**
        Append proof
        */
        const append_proof_type &append_proof() const
        {
            return append_proof_;
        }

        /**
        Verify the append proof and commitment
        */
        bool verify() const;

    private:
        commitment_type commitment_;
        append_proof_type append_proof_;
    };

    using InsertResultBatch = std::vector<InsertResult>;
} // namespace ozks
